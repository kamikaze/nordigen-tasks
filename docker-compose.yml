version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master

  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"

  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb
    ports:
      - "8081:8081"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
    command: [
      "/bin/sh", "-c",
      "until pg_isready -h ${POSTGRES_HOST} -d ${POSTGRES_DB}; do echo 'wait for db'; sleep 1; done && pgweb --bind=0.0.0.0"
    ]
    depends_on:
      - db

  magic-service-backend:
    build:
      context: ./
      dockerfile: Dockerfile
    image: magic-service-backend
    container_name: magic-service-backend
    ports:
      - "8000:8000"
    environment:
      LOGGING_LEVEL: "${LOGGING_LEVEL:-DEBUG}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
      NORDIGEN_ID: "${NORDIGEN_ID}"
      NORDIGEN_KEY: "${NORDIGEN_KEY}"
      SERVICE_ADDRESS: "${SERVICE_ADDRESS}"
    command: bash -c "python manage.py migrate --noinput &&
                      python manage.py createsuperuser --noinput --username=${DJANGO_SUPERUSER_NAME} --email=${DJANGO_SUPERUSER_EMAIL} ;
                      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - rabbitmq
      - redis

  magic-service-worker:
    image: magic-service-backend
    container_name: magic-service-worker
    environment:
      LOGGING_LEVEL: "${LOGGING_LEVEL:-DEBUG}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
      NORDIGEN_ID: "${NORDIGEN_ID}"
      NORDIGEN_KEY: "${NORDIGEN_KEY}"
    command: bash -c "celery -A magic_service_app worker --loglevel=INFO -E"
    depends_on:
      - db
      - rabbitmq
      - redis
      - magic-service-backend
